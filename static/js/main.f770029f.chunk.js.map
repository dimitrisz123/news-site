{"version":3,"sources":["serviceWorker.js","articles.js","drawer/drawer.js","index.js"],"names":["Boolean","window","location","hostname","match","Article","react_default","a","createElement","react_apollo_esm","query","gql","_templateObject","_ref","loading","error","data","articles","map","article","console","log","title","summary","src","image","alt","height","width","href","site","ResponsiveDrawer","state","mobileOpen","handleDrawerToggle","_this","setState","_this$props","this","props","classes","theme","drawer","className","toolbar","Divider_default","List_default","text","index","ListItem_default","button","key","ListItemIcon_default","MoveToInbox_default","Mail_default","ListItemText_default","primary","root","CssBaseline_default","AppBar_default","position","appBar","Toolbar_default","IconButton_default","color","aria-label","onClick","menuButton","Menu_default","Typography_default","variant","noWrap","Hidden_default","smUp","implementation","Drawer_default","container","anchor","direction","open","onClose","paper","drawerPaper","xsDown","content","React","Component","withStyles","display","Object","defineProperty","breakpoints","up","flexShrink","marginLeft","concat","marginRight","mixins","flexGrow","padding","spacing","unit","withTheme","client","ApolloClient","uri","ReactDOM","render","drawer_drawer","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f770029f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\n\r\nconst Article = () => {\r\n\treturn (\r\n\t\t<Query\r\n\t\t\tquery={gql`\r\n\t\t\t\t{\r\n\t\t\t\t\tarticles {\r\n\t\t\t\t\t\ttitle\r\n\t\t\t\t\t\timage\r\n\t\t\t\t\t\tsummary\r\n\t\t\t\t\t\tsite\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t`}\r\n\t\t>\r\n\t\t\t{({ loading, error, data }) => {\r\n\t\t\t\tif (loading) return <p>Loading...</p>;\r\n\t\t\t\tif (error) return <p>Error :(</p>;\r\n\r\n\t\t\t\treturn data.articles.map(article => {\r\n\t\t\t\t\tconsole.log(data.articles);\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h1>{article.title}</h1>\r\n\t\t\t\t\t\t\t<p>{article.summary}</p>\r\n\t\t\t\t\t\t\t<img src={article.image} alt=\"article\" height=\"auto\" width=\"200\"/>\r\n\t\t\t\t\t\t\t<a href={article.site}>View more</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t}}\r\n\t\t</Query>\r\n\t);\r\n};\r\n\r\nexport default Article;\r\n","import React from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Articles from \"../articles\"\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    marginLeft: drawerWidth,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: 20,\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3,\r\n  },\r\n});\r\n\r\nclass ResponsiveDrawer extends React.Component {\r\n  state = {\r\n    mobileOpen: false,\r\n  };\r\n\r\n  handleDrawerToggle = () => {\r\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n\r\n    const drawer = (\r\n      <div>\r\n        <div className={classes.toolbar} />\r\n        <Divider />\r\n        <List>\r\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              Responsive drawer\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <nav className={classes.drawer}>\r\n          {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n          <Hidden smUp implementation=\"css\">\r\n            <Drawer\r\n              container={this.props.container}\r\n              variant=\"temporary\"\r\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n              open={this.state.mobileOpen}\r\n              onClose={this.handleDrawerToggle}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <Drawer\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n              variant=\"permanent\"\r\n              open\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n        </nav>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          <Articles/>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles, { withTheme: true })(ResponsiveDrawer);","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport Drawer from  \"./drawer/drawer\"\r\n\r\nconst client = new ApolloClient({\r\n\turi: \"https://nameless-ocean-88008.herokuapp.com/\"\r\n});\r\n\r\nReactDOM.render(\r\n\t<ApolloProvider client={client}>\r\n\t\t<Drawer />\r\n\t</ApolloProvider>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}